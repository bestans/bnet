// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bag.proto

package protoc // import ","

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 需要完全一致才能使用，防止复制
type BagOpt struct {
	Ret                  int64           `protobuf:"varint,2,opt,name=ret,proto3" json:"ret,omitempty"`
	Id                   int64           `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	ItemId               int64           `protobuf:"varint,4,opt,name=itemId,proto3" json:"itemId,omitempty"`
	Num                  int64           `protobuf:"varint,5,opt,name=num,proto3" json:"num,omitempty"`
	Rewards              map[int64]int64 `protobuf:"bytes,6,rep,name=rewards,proto3" json:"rewards,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Reason               int32           `protobuf:"varint,7,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *BagOpt) Reset()         { *m = BagOpt{} }
func (m *BagOpt) String() string { return proto.CompactTextString(m) }
func (*BagOpt) ProtoMessage()    {}
func (*BagOpt) Descriptor() ([]byte, []int) {
	return fileDescriptor_bag_649b6ae3a13cfeb8, []int{0}
}
func (m *BagOpt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BagOpt.Unmarshal(m, b)
}
func (m *BagOpt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BagOpt.Marshal(b, m, deterministic)
}
func (dst *BagOpt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BagOpt.Merge(dst, src)
}
func (m *BagOpt) XXX_Size() int {
	return xxx_messageInfo_BagOpt.Size(m)
}
func (m *BagOpt) XXX_DiscardUnknown() {
	xxx_messageInfo_BagOpt.DiscardUnknown(m)
}

var xxx_messageInfo_BagOpt proto.InternalMessageInfo

func (m *BagOpt) GetRet() int64 {
	if m != nil {
		return m.Ret
	}
	return 0
}

func (m *BagOpt) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *BagOpt) GetItemId() int64 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *BagOpt) GetNum() int64 {
	if m != nil {
		return m.Num
	}
	return 0
}

func (m *BagOpt) GetRewards() map[int64]int64 {
	if m != nil {
		return m.Rewards
	}
	return nil
}

func (m *BagOpt) GetReason() int32 {
	if m != nil {
		return m.Reason
	}
	return 0
}

func init() {
	proto.RegisterType((*BagOpt)(nil), "BagOpt")
	proto.RegisterMapType((map[int64]int64)(nil), "BagOpt.RewardsEntry")
}

func init() { proto.RegisterFile("bag.proto", fileDescriptor_bag_649b6ae3a13cfeb8) }

var fileDescriptor_bag_649b6ae3a13cfeb8 = []byte{
	// 223 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4c, 0x4a, 0x4c, 0xd7,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x97, 0xe2, 0x49, 0xce, 0xcf, 0xcd, 0xcd, 0xcf, 0x83, 0xf0, 0x94,
	0x1e, 0x30, 0x72, 0xb1, 0x39, 0x25, 0xa6, 0xfb, 0x17, 0x94, 0x08, 0x09, 0x70, 0x31, 0x17, 0xa5,
	0x96, 0x48, 0x30, 0x29, 0x30, 0x6a, 0x30, 0x07, 0x81, 0x98, 0x42, 0x7c, 0x5c, 0x4c, 0x99, 0x29,
	0x12, 0xcc, 0x60, 0x01, 0xa6, 0xcc, 0x14, 0x21, 0x31, 0x2e, 0xb6, 0xcc, 0x92, 0xd4, 0x5c, 0xcf,
	0x14, 0x09, 0x16, 0xb0, 0x18, 0x94, 0x07, 0xd2, 0x99, 0x57, 0x9a, 0x2b, 0xc1, 0x0a, 0xd1, 0x99,
	0x57, 0x9a, 0x2b, 0xa4, 0xc7, 0xc5, 0x5e, 0x94, 0x5a, 0x9e, 0x58, 0x94, 0x52, 0x2c, 0xc1, 0xa6,
	0xc0, 0xac, 0xc1, 0x6d, 0x24, 0xa2, 0x07, 0xb1, 0x45, 0x2f, 0x08, 0x22, 0xec, 0x9a, 0x57, 0x52,
	0x54, 0x19, 0x04, 0x53, 0x04, 0x32, 0xb9, 0x28, 0x35, 0xb1, 0x38, 0x3f, 0x4f, 0x82, 0x5d, 0x81,
	0x51, 0x83, 0x35, 0x08, 0xca, 0x93, 0xb2, 0xe2, 0xe2, 0x41, 0xd6, 0x00, 0xb2, 0x29, 0x3b, 0xb5,
	0x52, 0x82, 0x11, 0x62, 0x53, 0x76, 0x6a, 0xa5, 0x90, 0x08, 0x17, 0x6b, 0x59, 0x62, 0x4e, 0x69,
	0x2a, 0xd4, 0xdd, 0x10, 0x8e, 0x15, 0x93, 0x05, 0xa3, 0x15, 0x5b, 0xc7, 0x74, 0xa5, 0x8f, 0x8b,
	0x58, 0x9c, 0x78, 0x3c, 0x18, 0xa3, 0x38, 0x74, 0xac, 0xc1, 0xfe, 0x4d, 0x4e, 0x62, 0x03, 0xd3,
	0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x78, 0xeb, 0x31, 0xe1, 0x12, 0x01, 0x00, 0x00,
}
